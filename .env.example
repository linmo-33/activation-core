# 激活码管理系统环境变量配置文件
# 复制此文件为 .env.local 并填入实际的配置值

# ================================
# 核心配置（必需）
# ================================

# 数据库配置
# Supabase PostgreSQL 连接字符串
# 格式: postgresql://[user[:password]@][netloc][:port][/dbname][?param1=value1&...]
DATABASE_URL="postgresql://username:password@hostname:port/database_name?sslmode=require"

# JWT 密钥配置
# 用于生成和验证管理员登录 Token
# 建议使用强随机字符串，至少32个字符
# 生成方法: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET="your-super-secret-jwt-key-at-least-32-characters-long"

# 应用环境
# 生产环境设置为 production，开发环境设置为 development
NODE_ENV="development"

# ================================
# 客户端 API 安全配置
# ================================

# 客户端激活 API 密钥
# 用于保护客户端激活接口，防止未授权访问
# 生成方法: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
CLIENT_API_KEY="your-client-api-key-at-least-32-characters-long"

# ================================
# 响应签名配置（防抓包篡改）
# ================================

# ES256 私钥（PKCS#8 PEM 格式）
# 用于签名客户端 API 响应，防止篡改
# 生成方法: openssl genpkey -algorithm EC -pkeyopt ec_paramgen_curve:P-256 -out es256-private.pem
# 注意：换行符需要用 \n 转义，或设置为单行（去除换行）
RESPONSE_SIGN_PRIVATE_KEY_PEM="-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgYBKak+2vsd26ZmE/\n+CVqHukPLkaRYkV+yxEUdi8BovShRANCAAS4xnjWk6uL53Kw9i9QHJRUsjIp10zh\n0cwEQ1AaERst7e2HuZJwbKgxO4KIOu/97uEceXYrVWdIqKHldGXQPmEr\n-----END PRIVATE KEY-----\n"

# 可选：签名密钥 ID（便于密钥轮换和版本管理）
RESPONSE_SIGN_KEY_ID="key-v1"

# 可选：License Token 有效期（秒），默认 120 秒
RESPONSE_SIGN_TOKEN_TTL_SEC=120
